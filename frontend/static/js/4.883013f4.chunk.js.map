{"version":3,"sources":["components/audio/AudioPage.js","images/track_cover.ico"],"names":["AudioPage","state","UserMusic","AllMusic","offset","searchInputValue","isFetching","popupOpen","Done","pageId","props","match","params","id","isPageMine","playerStoreState","userId","fetchLimit","addMusicRef","createRef","fetchMusic","a","val","address","HTTP","ADDR","withValue","limit","setState","Fetcher","error","response","console","log","fetchInitialMusic","handleScrollThrottled","Throttle","Math","abs","window","scrollY","innerHeight","document","documentElement","scrollHeight","fetchInitialMusicDebounced","Debounce","onPopupClose","onFileDownloaded","current","files","length","postMusic","author","title","data","FormData","append","music_id","adder_id","myId","name","addToPlaylistHandler","musicId","deleteMusic","filter","track","playUserMusicHandler","updatePlayerStoreState","playlist","trackIndex","done","playlistName","playAllMusicHandler","onInputChange","event","target","value","this","addEventListener","removeEventListener","className","style","color","placeholder","onChange","type","accept","ref","htmlFor","map","UserTrack","key","playMusicHandler","deleteMusicHandler","AddAudioPopup","onClose","_onSend","React","Component","memo","useState","buttonActive","updateButtonActive","onClick","src","track_cover","alt","e","stopPropagation","disabled","_updateAuthor","_updateTitle","withRouter","module","exports"],"mappings":"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","file":"static/js/4.883013f4.chunk.js","sourcesContent":["import React, {createRef, useState, memo} from \"react\";\nimport \"./audio.scss\"\nimport \"../../scss/video_audio.scss\";\nimport \"../../scss/default_popup.scss\"\nimport Debounce from \"../../functools/Debounce\";\nimport Throttle from \"../../functools/Trottle\";\nimport Fetcher from \"../../functools/Fetcher\";\nimport {withRouter} from \"react-router-dom\"\nimport track_cover from \"../../images/track_cover.ico\"\nimport {HTTP,  ADDR} from \"../../address\";\n\nclass AudioPage extends React.Component{\n    state = { UserMusic: [], AllMusic : [], offset: 0, searchInputValue: \"\", isFetching: false, popupOpen: false, Done: false}\n    pageId = + this.props.match.params.id;\n    isPageMine = this.props.playerStoreState.userId === this.pageId;\n    fetchLimit = 20;\n    addMusicRef = createRef();\n\n\n    fetchMusic = async () => {\n        const offset = this.state.offset;\n        const val = this.state.searchInputValue;\n        const address = HTTP + ADDR + `/music/${val === \"\"? \"get_user_music\" : \"get_combined_music\" }`;\n        const params = {userId: this.pageId, offset: offset, withValue: val, limit: this.fetchLimit}\n        this.setState({isFetching: true});\n        const [error, response] = await Fetcher(\n            address,\n            params\n        )\n        if (error === null){\n            this.setState(state => ({\n                offset: offset + this.fetchLimit,\n                UserMusic: [...state.UserMusic, ...response.UserMusic],\n                AllMusic: [...state.AllMusic, ...response.AllMusic],\n                Done: response.Done\n            }));\n        }else {\n            console.log(error);\n        }\n        this.setState({isFetching: false});\n    }\n\n    fetchInitialMusic = ()=> {\n        this.setState(\n            {offset: 0, Done: false, UserMusic: [], AllMusic : []},\n            () => this.fetchMusic()\n        );\n    }\n\n    componentDidMount(){\n        this.fetchInitialMusic();\n        window.addEventListener('scroll', this.handleScrollThrottled, true);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScrollThrottled);\n    }\n\n    handleScrollThrottled = Throttle(()=>{\n        console.log(this.state.Done, this.state.popupOpen, this.state.isFetching);\n        if ((Math.abs(window.scrollY + window.innerHeight - document.documentElement.scrollHeight) < 10)\n            &&\n            !this.state.Done\n            &&\n            !this.state.popupOpen\n            &&\n            !this.state.isFetching\n        ){\n            this.fetchMusic();\n        }\n    }, 1000 )\n\n\n    fetchInitialMusicDebounced = Debounce(()=>{\n        this.setState(\n            {UserMusic: [], AllMusic : [], offset: 0},\n            () =>this.fetchInitialMusic()\n        );\n    }, 500);\n\n\n    onPopupClose = ()=>{\n        this.setState({popupOpen: false});\n    }\n\n    onFileDownloaded = ()=>{\n        if (this.addMusicRef.current.files.length) {\n            this.setState({popupOpen: true});\n        }\n    }\n\n    postMusic = async (author, title)=>{\n        this.onPopupClose();\n        const data = new FormData();\n        data.append(\"audio\", this.addMusicRef.current.files[0])\n        const [error, response] = await Fetcher(\n            HTTP + ADDR + \"/music/post_music\",\n            {author, title},\n            'POST',\n            \"text\",\n            data);\n\n        if (error === null){\n            this.setState(state => (\n                {UserMusic:\n                    [\n                        {\n                            music_id: response,\n                            adder_id: this.myId,\n                            author: author,\n                            name: title\n                        },\n\n                        ...state.UserMusic\n                    ],\n                offset: state.offset + 1\n            }))\n        }\n    }\n\n    addToPlaylistHandler = (music_id) => {\n       Fetcher(\n            HTTP + ADDR + \"/music/add_to_playlist\",\n            {musicId: music_id},\n            \"POST\",\n            \"text\"\n        )\n    }\n\n    deleteMusic = async(musicId) =>{\n        console.log(musicId);\n        const [error] = await Fetcher(\n            HTTP + ADDR + \"/music/remove_music\",\n            {musicId},\n            \"GET\",\n            \"text\"\n        )\n        if (error === null){\n            this.setState(state => ({\n                offset: this.offset - 1,\n                UserMusic: state.UserMusic.filter((track)=>track.music_id !== musicId)}\n                ));\n        }else {\n            console.log(error);\n        }\n    }\n\n    playUserMusicHandler = (offset) => {\n        this.props.updatePlayerStoreState({\n            playlist: this.state.UserMusic,\n            trackIndex: offset,\n            done: false,\n            playlistName: \"UserMusic\",\n            withValue: this.state.searchInputValue,\n            userId: this.pageId\n        })\n    }\n\n    playAllMusicHandler = (offset) => {\n        this.props.updatePlayerStoreState({\n            playlist: this.state.AllMusic,\n            trackIndex: offset,\n            done: false,\n            playlistName: \"AllMusic\",\n            withValue: this.state.searchInputValue,\n            userId: this.pageId\n        })\n    }\n\n    onInputChange = (event)=> {\n        this.setState({searchInputValue: event.target.value});\n        this.fetchInitialMusicDebounced()\n    }\n\n    render() {\n        return (\n            <div className={\"page__container\"}>\n                <div className={\"page__header background_pic__city background_pic__city_green\"}>\n                    <h1 style={{color: \"white\"}}>Музыка</h1>\n                    <p style={{color:  \"white\"}}>Здесь вы можете послушать музыку</p>\n                    <div className={\"audio_foreground_pic default_img\"}/>\n                </div>\n                <div className={\"VA_func_block\"}>\n                    <input className={\"default_search_input\"}\n                           placeholder={\"Поиск музыки\"}\n                           value={this.state.searchInputValue}\n                           onChange={this.onInputChange}/>\n                    <input\n                        type={\"file\"}\n                        className={\"hidden_input\"}\n                        id = {\"select_audio_file__input\"}\n                        accept={\"audio/*\"}\n                        ref = {this.addMusicRef}\n                        onChange={this.onFileDownloaded}\n                    />\n                    <label htmlFor=\"select_audio_file__input\">+</label>\n                </div>\n                {\n                    this.state.UserMusic.map( (track, offset) =>\n                        <UserTrack\n                            key = {track.music_id}\n                            offset = {offset}\n                            playMusicHandler = {this.playUserMusicHandler}\n                            deleteMusicHandler = {this.deleteMusic}\n                            name = {track.name}\n                            author = {track.author}\n                            music_id = {track.music_id}\n                            isPageMine = {this.isPageMine}\n                        />\n                    )\n                }\n                {this.state.AllMusic.length ? <div>Все аудиозаписи</div> : null}\n                {\n                    this.state.AllMusic.map((track,offset) =>\n                        <UserTrack\n                            key = {track.music_id}\n                            offset = {offset}\n                            name = {track.name}\n                            author = {track.author}\n                            music_id = {track.music_id}\n                            playMusicHandler = {this.playAllMusicHandler}\n                            addToPlaylistHandler = {this.addToPlaylistHandler}\n                        />\n                    )\n                }\n                {this.state.isFetching && <span>Загрузка...</span>}\n                {this.state.popupOpen && <AddAudioPopup onClose={this.onPopupClose} _onSend={this.postMusic}/>}\n            </div>\n\n        )\n    }\n}\n\nconst UserTrack = memo(({isPageMine, playMusicHandler, deleteMusicHandler, offset, name, author, music_id, addToPlaylistHandler})=>{\n    const [buttonActive, updateButtonActive] = useState(true);\n\n    const onPlay = () =>{\n        playMusicHandler(offset)\n    }\n\n    const onDelete = (e) =>{\n        e.stopPropagation();\n        deleteMusicHandler(music_id);\n    }\n\n    const onAdd = (e)=>{\n        e.stopPropagation();\n        addToPlaylistHandler(music_id);\n        updateButtonActive(false);\n    }\n\n\n    return (\n        <div className={\"audio_track\"} onClick={onPlay}>\n            <div className={\"audio_info\"}>\n                <img className={\"audio_cover\"} src={track_cover} alt = {\"\"}/>\n                <span className={\"audio_track__name\"}>{name}</span>\n                <span className={\"audio_track__author\"}>{author}</span>\n            </div>\n            {isPageMine ?\n                <div>\n                    <button className={\"audio__button audio__button-delete\"}\n                            onClick={onDelete}>❌</button>\n                </div>\n                :\n                <div>\n                    <button className={\"audio__button audio__button-add\"}\n                            onClick={onAdd}\n                            disabled={!buttonActive}\n                    >{buttonActive ? '+' : '✓'}</button>\n                </div>\n\n            }\n        </div>\n        )\n});\n\nfunction AddAudioPopup({onClose, _onSend}) {\n    const [author, _updateAuthor] = useState(\"\");\n    const [title, _updateTitle] = useState(\"\");\n\n    const onSend = () =>{\n        _onSend(author, title);\n    }\n    const updateAuthor = ({target})=>{\n        _updateAuthor(target.value);\n    }\n    const updateTitle = ({target})=>{\n        _updateTitle(target.value);\n    }\n    return (\n        <div className=\"b-popup\">\n            <div className=\"b-popup-content\">\n                <button className={\"popup_button__close\"} onClick={onClose}>×</button>\n                <input placeholder={\"Автор\"} value={author} onChange={updateAuthor}/>\n                <input placeholder={\"Название\"} value={title} onChange={updateTitle}/>\n                <button className={\"popup_button__action\"} onClick={onSend}>Загрузить</button>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(AudioPage);","module.exports = __webpack_public_path__ + \"static/media/track_cover.384858af.ico\";"],"sourceRoot":""}