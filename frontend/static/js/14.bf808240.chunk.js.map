{"version":3,"sources":["components/settings/SettingsLayout.js","components/settings/pages/HobbyAndInterestsPage.js"],"names":["Line","children","className","Column","SmallTextField","header","props","SelectField","options","value","map","option","key","LargeTextField","SmallFileField","React","forwardRef","ref","type","HobbyAndInterestsPage","state","isFetching","error","hobby","fav_music","fav_films","fav_books","fav_games","other_interests","handleError","bind","handleClose","fetchData","a","setState","Fetcher","HTTP","ADDR","response","onChangeHandler","target","name","sendFormHandler","e","preventDefault","copy","JSON","stringify","this","onSubmit","onChange","text","Component"],"mappings":"sVAGO,SAASA,EAAT,GAA2B,IAAZC,EAAW,EAAXA,SAClB,OACI,yBAAKC,UAAW,kCACXD,GAKN,SAASE,EAAT,GAA6B,IAAZF,EAAW,EAAXA,SACpB,OACI,yBAAKC,UAAW,oCACXD,GAKN,SAASG,EAAT,GAA4C,IAAnBC,EAAkB,EAAlBA,OAAUC,EAAQ,0BAC9C,OACI,yBAAKJ,UAAW,iBACZ,uBAAGA,UAAW,wBAAyBG,GACvC,yCAAOH,UAAW,wBAA4BI,KAKnD,SAASC,EAAT,GAAiE,IAA3CF,EAA0C,EAA1CA,OAA0C,IAAlCG,eAAkC,MAA1B,GAA0B,MAAtBC,aAAsB,MAAd,GAAc,EAAPH,EAAO,4CACnE,OACI,yBAAKJ,UAAW,iBACZ,uBAAGA,UAAW,wBAAyBG,GACvC,0CAAQH,UAAW,uBAAwBO,MAASA,GAAWH,GAC1DE,EAAQE,KAAI,SAAAC,GAAM,OAAE,4BAAQC,IAAOD,GAAUA,QAMvD,SAASE,EAAT,GAA6C,IAApBR,EAAmB,EAAnBA,OAAWC,EAAQ,0BAC/C,OACI,yBAAKJ,UAAW,iBACZ,uBAAGA,UAAW,wBAAyBG,GACvC,4CAAUH,UAAW,wBAA4BI,KAKtD,IAAMQ,EAAiBC,IAAMC,YAAW,WAAqBC,GAArB,IAAEZ,EAAF,EAAEA,OAAWC,EAAb,iCAC3C,yBAAKJ,UAAW,iBACZ,uBAAGA,UAAW,wBAAyBG,GACvC,yCAAOH,UAAU,uBAAuBgB,KAAM,QAAYZ,EAA1D,CAAiEW,IAAOA,U,iOC7C3DE,E,4MACjBC,MAAO,CACHC,YAAY,EACZC,MAAO,KACPC,MAAO,KACPC,UAAW,KACXC,UAAW,KACXC,UAAW,KACXC,UAAW,KACXC,gBAAiB,M,EAErBC,YAAcA,IAAYC,KAAZ,gB,EACdC,YAAcA,IAAYD,KAAZ,gB,EACdE,U,sBAAY,kCAAAC,EAAA,6DACR,EAAKC,SAAS,CAACb,YAAY,IADnB,SAEwBc,YAAQC,IAAOC,IAAO,qBAF9C,mCAEDf,EAFC,KAEMgB,EAFN,KAGM,OAAVhB,EACA,EAAKY,SAAL,eAAkBI,IAElB,EAAKT,YAAY,wMAErB,EAAKK,SAAS,CAACb,YAAY,IARnB,2C,EAgBZkB,gBAAkB,YAAa,IAAXC,EAAU,EAAVA,OAChB,EAAKN,SAAL,eAAgBM,EAAOC,KAAQD,EAAO/B,S,EAI1CiC,gB,uCAAkB,WAAOC,GAAP,mBAAAV,EAAA,6DACdU,EAAEC,wBAEIC,EAHQ,eAGG,EAAKzB,QACVE,aACLuB,EAAKxB,WALE,SAMQc,YAAQC,IAAOC,IAAO,2BACxC,GAAI,OAAQ,OAAQS,KAAKC,UAAUF,IAPzB,mCAQA,OARA,MASV,EAAKhB,YAAY,sJATP,4C,wHATdmB,KAAKhB,c,+BAuBL,OAAIgB,KAAK5B,MAAMC,WACJ,kBAAC,IAAD,MAGH,yBAAKnB,UAAW,iBACZ,yBAAKA,UAAW,yBAAhB,0FACA,0BAAM+C,SAAUD,KAAKN,iBACjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAgBrC,OAAQ,iCACRI,MAAOuC,KAAK5B,MAAMG,MAClBkB,KAAK,QACLS,SAAUF,KAAKT,kBAG/B,kBAAC,IAAD,CAAgBlC,OAAQ,kFACRI,MAAOuC,KAAK5B,MAAMI,UAClBiB,KAAM,YACNS,SAAUF,KAAKT,mBAInC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIlC,OAAQ,kFACRI,MAAOuC,KAAK5B,MAAMK,UAClBgB,KAAM,YACNS,SAAUF,KAAKT,kBAEnB,kBAAC,IAAD,CACIlC,OAAQ,4EACRI,MAAOuC,KAAK5B,MAAMM,UAClBe,KAAM,YACNS,SAAUF,KAAKT,mBAIvB,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIlC,OAAQ,sEACRI,MAAOuC,KAAK5B,MAAMO,UAClBc,KAAM,YACNS,SAAUF,KAAKT,kBAEnB,kBAAC,IAAD,CACIlC,OAAQ,kFACRI,MAAOuC,KAAK5B,MAAMQ,gBAClBa,KAAM,kBACNS,SAAUF,KAAKT,mBAIvB,kBAAC,IAAD,KACI,4BAAQrC,UAAW,gCAAnB,oDACA,4BAAQA,UAAW,iCAAnB,mHAIP8C,KAAK5B,MAAME,OAAS,kBAAC,IAAD,CAAW6B,KAAQH,KAAK5B,MAAME,MAAOS,YAAeiB,KAAKjB,mB,GAzG/ChB,IAAMqC","file":"static/js/14.bf808240.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../../scss/default_blocks.scss\"\n\nexport function Line({children}) {\n    return (\n        <div className={\"default_container default_line\"}>\n            {children}\n        </div>\n    )\n}\n\nexport function Column({children}) {\n    return (\n        <div className={\"default_container default_column\"}>\n            {children}\n        </div>\n    )\n}\n\nexport function SmallTextField({header,...props}) {\n    return (\n        <div className={\"default_field\"}>\n            <p className={\"default_field__label\"}>{header}</p>\n            <input className={\"default_field__input\"} {...props}/>\n        </div>\n    )\n}\n\nexport function SelectField({header, options=[], value = \"\", ...props}){\n    return (\n        <div className={\"default_field\"}>\n            <p className={\"default_field__label\"}>{header}</p>\n            <select className={\"default_field__input\"} value = {value} {...props}>\n                {options.map(option=><option key = {option} >{option}</option>)}\n            </select>\n        </div>\n    )\n}\n\nexport function LargeTextField({header, ...props}) {\n    return (\n        <div className={\"default_field\"}>\n            <p className={\"default_field__label\"}>{header}</p>\n            <textarea className={\"default_field__input\"} {...props}/>\n        </div>\n    )\n}\n\nexport const SmallFileField = React.forwardRef(({header, ...props}, ref)=>(\n    <div className={\"default_field\"}>\n        <p className={\"default_field__label\"}>{header}</p>\n        <input className=\"default_field__input\" type={\"file\"} {...props} ref = {ref}/>\n    </div>\n));","import React from \"react\";\nimport {Line, LargeTextField} from \"../SettingsLayout\";\nimport Loading from \"../../loader/LoadingPage\";\nimport Fetcher from \"../../../functools/Fetcher\";\nimport {HTTP, ADDR} from \"../../../address\";\nimport InfoPopup, {handleError, handleClose} from \"../../infoPopup/infoPopup\";\nexport default class HobbyAndInterestsPage extends React.Component{\n    state ={\n        isFetching: true,\n        error: null,\n        hobby: null,\n        fav_music: null,\n        fav_films: null,\n        fav_books: null,\n        fav_games: null,\n        other_interests: null,\n    };\n    handleError = handleError.bind(this);\n    handleClose = handleClose.bind(this);\n    fetchData = async ()=>{\n        this.setState({isFetching: true});\n        const [error, response] = await Fetcher(HTTP + ADDR + \"/settings/hobbies\");\n        if (error === null){\n            this.setState({...response});\n        }else{\n            this.handleError(\"Невозможно получить данные с сервера\");\n        }\n        this.setState({isFetching: false});\n    }\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n\n    onChangeHandler = ({target})=>{\n        this.setState({[target.name] : target.value} )\n    };\n\n\n    sendFormHandler = async (e)=> {\n        e.preventDefault();\n\n        const copy = {...this.state};\n        delete copy.error;\n        delete copy.isFetching;\n        const [error] = await Fetcher(HTTP + ADDR + \"/settings/update_hobbies\",\n            {}, \"POST\", \"text\", JSON.stringify(copy));\n        if (error !== null){\n            this.handleError(\"Невозможно обновить данные\");\n        }\n    };\n\n    render() {\n        if (this.state.isFetching){\n            return <Loading/>\n        }else {\n            return (\n                <div className={\"default_block\"}>\n                    <div className={\"default_block__header\"}>Хобби и интересы</div>\n                    <form onSubmit={this.sendFormHandler}>\n                        <Line>\n                            <LargeTextField header={\"Хобби\"}\n                                            value={this.state.hobby}\n                                            name=\"hobby\"\n                                            onChange={this.onChangeHandler}\n                            />\n\n                            <LargeTextField header={\"Любимая музыка\"}\n                                            value={this.state.fav_music}\n                                            name={\"fav_music\"}\n                                            onChange={this.onChangeHandler}\n                            />\n                        </Line>\n\n                        <Line>\n                            <LargeTextField\n                                header={\"Любимые фильмы\"}\n                                value={this.state.fav_films}\n                                name={\"fav_films\"}\n                                onChange={this.onChangeHandler}\n                            />\n                            <LargeTextField\n                                header={\"Любимые книги\"}\n                                value={this.state.fav_books}\n                                name={\"fav_books\"}\n                                onChange={this.onChangeHandler}\n                            />\n                        </Line>\n\n                        <Line>\n                            <LargeTextField\n                                header={\"Любимые игры\"}\n                                value={this.state.fav_games}\n                                name={\"fav_games\"}\n                                onChange={this.onChangeHandler}\n                            />\n                            <LargeTextField\n                                header={\"Другие занятия\"}\n                                value={this.state.other_interests}\n                                name={\"other_interests\"}\n                                onChange={this.onChangeHandler}\n                            />\n                        </Line>\n\n                        <Line>\n                            <button className={\"default_button cancel_button\"}>Отменить</button>\n                            <button className={\"default_button confirm_button\"}>Сохранить изменения</button>\n                        </Line>\n\n                    </form>\n                    {this.state.error && <InfoPopup text = {this.state.error} handleClose = {this.handleClose}/>}\n                </div>\n            )\n        }\n    }\n}"],"sourceRoot":""}