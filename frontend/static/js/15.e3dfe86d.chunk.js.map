{"version":3,"sources":["components/settings/pages/PasswordPage.js","components/settings/SettingsLayout.js"],"names":["PasswordPage","state","old_password","new_password","confirm_new_password","error","handleError","bind","handleClose","onChangeHandler","target","setState","name","value","onFormSubmit","e","a","preventDefault","length","console","log","Fetcher","HTTP","ADDR","JSON","stringify","className","onSubmit","this","type","header","onChange","text","React","Component","Line","children","Column","SmallTextField","props","SelectField","options","map","option","key","LargeTextField","SmallFileField","forwardRef","ref"],"mappings":"0RAKqBA,E,4MACjBC,MAAO,CACHC,aAAc,GACdC,aAAc,GACdC,qBAAsB,GACtBC,MAAO,M,EAEXC,YAAcA,IAAYC,KAAZ,gB,EACdC,YAAcA,IAAYD,KAAZ,gB,EACdE,gBAAkB,YAAa,IAAXC,EAAU,EAAVA,OAChB,EAAKC,SAAL,eAAgBD,EAAOE,KAAQF,EAAOG,S,EAG1CC,a,uCAAe,WAAOC,GAAP,qBAAAC,EAAA,yDACXD,EAAEE,iBACG,EAAKhB,MAAMC,aAAagB,QAAW,EAAKjB,MAAME,aAAae,OAFrD,gBAGPC,QAAQC,IAAI,gGAHL,0BAID,EAAKnB,MAAME,eAAiB,EAAKF,MAAMG,qBAJtC,gBAKPe,QAAQC,IAAI,4GALL,8BAODlB,EAAe,EAAKD,MAAMC,aAC1BC,EAAe,EAAKF,MAAME,aARzB,UASekB,YAAQC,IAAOC,IAAO,4BACxC,KAAM,OAAQ,OAAQC,KAAKC,UAAU,CAACvB,eAAcC,kBAVjD,oCAWO,OAXP,KAYH,EAAKG,YAAY,8HAEjB,EAAKA,YAAY,uYAdd,4C,6GAoBX,OACQ,yBAAKoB,UAAW,iBACZ,yBAAKA,UAAW,yBAAhB,mFACA,0BAAMC,SAAUC,KAAKd,cACjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIe,KAAO,WACPC,OAAQ,qJACRlB,KAAO,eACPmB,SAAYH,KAAKnB,mBAIzB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAgBoB,KAAO,WACPC,OAAQ,sEACRlB,KAAO,eACPmB,SAAYH,KAAKnB,kBAEjC,kBAAC,IAAD,CAAgBoB,KAAO,WACPC,OAAQ,yIACRlB,KAAO,uBACPmB,SAAYH,KAAKnB,mBAIrC,kBAAC,IAAD,KACI,4BAAQiB,UAAW,iCAAnB,4IAGPE,KAAK3B,MAAMI,OAAS,kBAAC,IAAD,CAAW2B,KAAQJ,KAAK3B,MAAMI,MAAOG,YAAeoB,KAAKpB,mB,GA/DxDyB,IAAMC,Y,8QCFzC,SAASC,EAAT,GAA2B,IAAZC,EAAW,EAAXA,SAClB,OACI,yBAAKV,UAAW,kCACXU,GAKN,SAASC,EAAT,GAA6B,IAAZD,EAAW,EAAXA,SACpB,OACI,yBAAKV,UAAW,oCACXU,GAKN,SAASE,EAAT,GAA4C,IAAnBR,EAAkB,EAAlBA,OAAUS,EAAQ,0BAC9C,OACI,yBAAKb,UAAW,iBACZ,uBAAGA,UAAW,wBAAyBI,GACvC,yCAAOJ,UAAW,wBAA4Ba,KAKnD,SAASC,EAAT,GAAiE,IAA3CV,EAA0C,EAA1CA,OAA0C,IAAlCW,eAAkC,MAA1B,GAA0B,MAAtB5B,aAAsB,MAAd,GAAc,EAAP0B,EAAO,4CACnE,OACI,yBAAKb,UAAW,iBACZ,uBAAGA,UAAW,wBAAyBI,GACvC,0CAAQJ,UAAW,uBAAwBb,MAASA,GAAW0B,GAC1DE,EAAQC,KAAI,SAAAC,GAAM,OAAE,4BAAQC,IAAOD,GAAUA,QAMvD,SAASE,EAAT,GAA6C,IAApBf,EAAmB,EAAnBA,OAAWS,EAAQ,0BAC/C,OACI,yBAAKb,UAAW,iBACZ,uBAAGA,UAAW,wBAAyBI,GACvC,4CAAUJ,UAAW,wBAA4Ba,KAKtD,IAAMO,EAAiBb,IAAMc,YAAW,WAAqBC,GAArB,IAAElB,EAAF,EAAEA,OAAWS,EAAb,iCAC3C,yBAAKb,UAAW,iBACZ,uBAAGA,UAAW,wBAAyBI,GACvC,yCAAOJ,UAAU,uBAAuBG,KAAM,QAAYU,EAA1D,CAAiES,IAAOA","file":"static/js/15.e3dfe86d.chunk.js","sourcesContent":["import React from \"react\";\nimport {SmallTextField, Line} from \"../SettingsLayout\";\nimport Fetcher from \"../../../functools/Fetcher\";\nimport {HTTP, ADDR} from \"../../../address\";\nimport InfoPopup, {handleError, handleClose} from \"../../infoPopup/infoPopup\";\nexport default class PasswordPage extends React.Component{\n    state ={\n        old_password: \"\",\n        new_password: \"\",\n        confirm_new_password: \"\",\n        error: null,\n    };\n    handleError = handleError.bind(this);\n    handleClose = handleClose.bind(this);\n    onChangeHandler = ({target})=>{\n        this.setState({[target.name] : target.value} )\n    };\n\n    onFormSubmit = async (e) =>{\n        e.preventDefault();\n        if (!this.state.old_password.length || !this.state.new_password.length){\n            console.log(\"Поля не заполнены\")\n        }else if (this.state.new_password !== this.state.confirm_new_password){\n            console.log(\"Пароли не совпадают\");\n        }else{\n            const old_password = this.state.old_password;\n            const new_password = this.state.new_password;\n            const [error] = await Fetcher(HTTP + ADDR + \"/settings/update_password\",\n                null, \"POST\", \"text\", JSON.stringify({old_password, new_password}))\n            if (error === null){\n                this.handleError(\"Пароль успешно изменен\");\n            }else{\n                this.handleError(\"Невозможно изменить пароль, возможно вы ввели неправильный старвй пароль\");\n            }\n        }\n    };\n\n    render() {\n        return (\n                <div className={\"default_block\"}>\n                    <div className={\"default_block__header\"}>Сменить пароль</div>\n                    <form onSubmit={this.onFormSubmit}>\n                        <Line>\n                            <SmallTextField\n                                type = \"password\"\n                                header={\"Подтвердить текущий пароль\"}\n                                name = \"old_password\"\n                                onChange = {this.onChangeHandler}\n                            />\n                        </Line>\n\n                        <Line>\n                            <SmallTextField type = \"password\"\n                                            header={\"Новый пароль\"}\n                                            name = \"new_password\"\n                                            onChange = {this.onChangeHandler}\n                            />\n                            <SmallTextField type = \"password\"\n                                            header={\"Подтвердить новый пароль\"}\n                                            name = \"confirm_new_password\"\n                                            onChange = {this.onChangeHandler}\n                            />\n                        </Line>\n\n                        <Line>\n                            <button className={\"default_button confirm_button\"}>Подтвердить смену пароля</button>\n                        </Line>\n                    </form>\n                    {this.state.error && <InfoPopup text = {this.state.error} handleClose = {this.handleClose}/>}\n                </div>\n        )\n    }\n}","import React from \"react\";\nimport \"../../scss/default_blocks.scss\"\n\nexport function Line({children}) {\n    return (\n        <div className={\"default_container default_line\"}>\n            {children}\n        </div>\n    )\n}\n\nexport function Column({children}) {\n    return (\n        <div className={\"default_container default_column\"}>\n            {children}\n        </div>\n    )\n}\n\nexport function SmallTextField({header,...props}) {\n    return (\n        <div className={\"default_field\"}>\n            <p className={\"default_field__label\"}>{header}</p>\n            <input className={\"default_field__input\"} {...props}/>\n        </div>\n    )\n}\n\nexport function SelectField({header, options=[], value = \"\", ...props}){\n    return (\n        <div className={\"default_field\"}>\n            <p className={\"default_field__label\"}>{header}</p>\n            <select className={\"default_field__input\"} value = {value} {...props}>\n                {options.map(option=><option key = {option} >{option}</option>)}\n            </select>\n        </div>\n    )\n}\n\nexport function LargeTextField({header, ...props}) {\n    return (\n        <div className={\"default_field\"}>\n            <p className={\"default_field__label\"}>{header}</p>\n            <textarea className={\"default_field__input\"} {...props}/>\n        </div>\n    )\n}\n\nexport const SmallFileField = React.forwardRef(({header, ...props}, ref)=>(\n    <div className={\"default_field\"}>\n        <p className={\"default_field__label\"}>{header}</p>\n        <input className=\"default_field__input\" type={\"file\"} {...props} ref = {ref}/>\n    </div>\n));"],"sourceRoot":""}