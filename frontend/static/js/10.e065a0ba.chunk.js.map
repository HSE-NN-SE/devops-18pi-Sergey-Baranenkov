{"version":3,"sources":["components/friends/FriendsPage.js"],"names":["FriendsPage","state","error","handleError","bind","handleClose","className","style","color","RelationClassifierLink","to","this","props","match","params","id","label","path","render","Relationships","type","text","React","Component","activeOnlyWhenExact","useRouteMatch","exact","backgroundColor","people","offset","isFetching","Done","limit","myId","getCookie","isPageMine","handleScrollThrottled","Throttle","Math","abs","window","scrollY","innerHeight","document","documentElement","scrollHeight","fetchData","a","setState","Fetcher","HTTP","ADDR","userId","mode","response","s","People","onAction","query","prevRelType","filter","person","user_id","prevProps","prevState","snapshot","addEventListener","removeEventListener","map","Relationship","key","history","useHistory","alt","src","PathFromIdGenerator","cursor","onClick","push","first_name","last_name","pathname","withRouter"],"mappings":"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","file":"static/js/10.e065a0ba.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../../scss/page.scss\";\nimport \"./friends_page.scss\";\nimport PathFromIdGenerator from \"../../functools/PathFromIdGenerator\";\nimport \"../../scss/default_blocks.scss\";\nimport {HTTP, ADDR} from \"../../address\";\nimport {Link, Route, Switch, useRouteMatch, withRouter, useHistory} from 'react-router-dom';\nimport Fetcher from \"../../functools/Fetcher\";\nimport InfoPopup, {handleError, handleClose} from \"../infoPopup/infoPopup\";\nimport Throttle from \"../../functools/Trottle\";\nimport getCookie from \"../../functools/getCookie\";\n\nclass FriendsPage extends React.Component{\n    state = {error: null};\n    handleError = handleError.bind(this);\n    handleClose = handleClose.bind(this);\n\n    render(){\n        return (\n            <div className={\"page__container\"}>\n                <div className={\"page__header background_pic__city background_pic__city_green\"}>\n                    <h1 style={{color: \"white\"}}>Друзья</h1>\n                    <p style={{color:  \"white\"}}>Здесь находится список друзей</p>\n                    <div className={\"friends_foreground_pic default_img\"}/>\n                </div>\n                <div className={\"friends_classifier__container\"}>\n                    <RelationClassifierLink\n                        to={`/связи/${this.props.match.params.id}/друзья`}\n                        label={\"Друзья\"}\n                    />\n                    <RelationClassifierLink\n                        to={`/связи/${this.props.match.params.id}/подписчики`}\n                        label={\"Подписчики\"}\n                    />\n                    <RelationClassifierLink\n                        to={`/связи/${this.props.match.params.id}/подписки`}\n                        label={\"Подписки\"}\n                    />\n                </div>\n                <Switch>\n                    <Route path=\"/связи/:id/друзья\" render={props => <Relationships type={3} handleError={this.handleError} {...props}/>}/>\n                    <Route path=\"/связи/:id/подписчики\" render={props => <Relationships type = {2} handleError={this.handleError} {...props}/>}/>\n                    <Route path=\"/связи/:id/подписки\" render = {props => <Relationships type ={1} handleError={this.handleError} {...props}/>}/>\n                </Switch>\n                {this.state.error && <InfoPopup text = {this.state.error} handleClose = {this.handleClose}/>}\n            </div>\n        )\n    }\n}\n\nfunction RelationClassifierLink({ label, to, activeOnlyWhenExact}) {\n    const match = useRouteMatch({\n        path: to,\n        exact: activeOnlyWhenExact\n    });\n    const style = {color: \"white\"}\n    if (match) style.backgroundColor = \"orange\";\n    return (\n        <Link style={style}\n              className={`default_link friends_classifier__item`}\n              to={to}>\n            {label}\n        </Link>\n    );\n}\n\n\n\nclass Relationships extends React.Component{\n    state = {\n        people: [],\n        offset: 0,\n        isFetching: false,\n        Done: false,\n    }\n    limit = 15;\n    myId = +getCookie(\"userId\");\n    isPageMine = +this.props.match.params.id === this.myId;\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.type !== this.props.type || this.props.match.params.id !== prevProps.match.params.id){\n            this.isPageMine = +this.props.match.params.id ===  this.myId;\n            this.setState({people:[], offset:0, Done: false}, ()=>{\n                this.fetchData();\n            })\n        }\n    }\n\n    componentDidMount() {\n        this.fetchData();\n        window.addEventListener('scroll', this.handleScrollThrottled, true);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScrollThrottled);\n    }\n\n    handleScrollThrottled = Throttle(()=>{\n        if ((Math.abs(window.scrollY + window.innerHeight - document.documentElement.scrollHeight) < 10)\n            &&\n            !this.state.Done\n            &&\n            !this.state.isFetching\n        ){\n            this.fetchData();\n        }\n    }, 1000 )\n\n    fetchData = async ()=>{\n        this.setState({isFetching: true});\n        const [error, response] = await Fetcher(HTTP + ADDR + \"/relations/get_relations\",\n            {userId:this.props.match.params.id, mode: this.props.type, limit: this.limit, offset: this.state.offset}\n\n            );\n        if (error === null){\n            this.setState(s => ({people: [...s.people, ...response.People], offset: s.offset + this.limit, Done: response.Done}));\n        }else{\n            this.props.handleError(\"невозможно получить данные с сервера\");\n        }\n        this.setState({isFetching: false});\n    }\n\n    onAction = async (userId) => {\n        const query = HTTP + ADDR + \"/relations/update_relationship\";\n        const [error] = await Fetcher(query, {prevRelType : this.props.type, userId}, \"POST\",\"text\");\n        if (error === null){\n            this.setState(s => ({people: s.people.filter(person => person.user_id!==userId), offset: s.offset - 1}));\n        }else {\n            this.props.handleError(\"невозможно обновить связь\");\n        }\n    }\n\n    render() {\n        return (\n            <>\n                {this.state.people.map( person =>\n                    <Relationship\n                        key = {person.user_id}\n                        {...person}\n                        type = {this.props.type}\n                        onAction={this.onAction}\n                        isPageMine = {this.isPageMine}\n                    />\n                )}\n                {this.state.isFetching && <span>Загрузка...</span>}\n            </>\n        )\n    }\n}\n\nfunction Relationship(props) {\n    const history = useHistory();\n\n    const onAction = ()=>{\n        props.onAction (props.user_id);\n    }\n\n    const goToProfile = ()=>{\n        history.push(\"/профиль/\" + props.user_id);\n    }\n\n    return (\n        <div className={\"rel__container\"}>\n            <img className={\"default_img rel_user__avatar\"} alt = \" \" src={\n                HTTP + ADDR + `/profile_bgs${PathFromIdGenerator(props.user_id)}/profile_avatar.jpg`\n            }\n            />\n            <div className={\"rel_user__vertical\"}>\n                <span className={\"rel_user__fullname\"} style={{cursor:\"pointer\"}} onClick={goToProfile}>\n                    {`${props.first_name} ${props.last_name}`}\n                </span>\n                <Link className={\"rel_user__send_mes\"} to = {{\n                    pathname: '/сообщения/',\n                    user_id: props.user_id,\n                    first_name: props.first_name,\n                    last_name: props.last_name\n                }}>Написать сообщение</Link>\n\n            </div>\n            <div className={\"rel__functional\"}>\n                {\n                    props.isPageMine &&\n                        (\n                        (props.type === 3 || props.type === 1) ?\n                            <button className={\"rel__button delete_friend__button\"} onClick={onAction}>❌</button>\n                            :\n                            <button className={\"rel__button add_friend__button\"} onClick={onAction}>+</button>\n                        )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(FriendsPage);"],"sourceRoot":""}