{"version":3,"sources":["components/settings/SettingsLayout.js","components/settings/pages/PasswordPage.js"],"names":["Line","children","className","Column","SmallTextField","header","props","SelectField","options","value","map","option","key","LargeTextField","SmallFileField","React","forwardRef","ref","type","PasswordPage","onChangeHandler","target","setState","name","onFormSubmit","e","a","preventDefault","state","old_password","length","new_password","console","log","confirm_new_password","Fetcher","HTTP","ADDR","JSON","stringify","onSubmit","this","onChange","Component"],"mappings":"gVAGO,SAASA,EAAT,GAA2B,IAAZC,EAAW,EAAXA,SAClB,OACI,yBAAKC,UAAW,kCACXD,GAKN,SAASE,EAAT,GAA6B,IAAZF,EAAW,EAAXA,SACpB,OACI,yBAAKC,UAAW,oCACXD,GAKN,SAASG,EAAT,GAA4C,IAAnBC,EAAkB,EAAlBA,OAAUC,EAAQ,0BAC9C,OACI,yBAAKJ,UAAW,iBACZ,uBAAGA,UAAW,wBAAyBG,GACvC,yCAAOH,UAAW,wBAA4BI,KAKnD,SAASC,EAAT,GAAiE,IAA3CF,EAA0C,EAA1CA,OAA0C,IAAlCG,eAAkC,MAA1B,GAA0B,MAAtBC,aAAsB,MAAd,GAAc,EAAPH,EAAO,4CACnE,OACI,yBAAKJ,UAAW,iBACZ,uBAAGA,UAAW,wBAAyBG,GACvC,0CAAQH,UAAW,uBAAwBO,MAASA,GAAWH,GAC1DE,EAAQE,KAAI,SAAAC,GAAM,OAAE,4BAAQC,IAAOD,GAAUA,QAMvD,SAASE,EAAT,GAA6C,IAApBR,EAAmB,EAAnBA,OAAWC,EAAQ,0BAC/C,OACI,yBAAKJ,UAAW,iBACZ,uBAAGA,UAAW,wBAAyBG,GACvC,4CAAUH,UAAW,wBAA4BI,KAKtD,IAAMQ,EAAiBC,IAAMC,YAAW,WAAqBC,GAArB,IAAEZ,EAAF,EAAEA,OAAWC,EAAb,iCAC3C,yBAAKJ,UAAW,iBACZ,uBAAGA,UAAW,wBAAyBG,GACvC,yCAAOH,UAAU,uBAAuBgB,KAAM,QAAYZ,EAA1D,CAAiEW,IAAOA,U,2LC9C3DE,E,kDACjB,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IAQVc,gBAAkB,YAAa,IAAXC,EAAU,EAAVA,OAChB,EAAKC,SAAL,eAAgBD,EAAOE,KAAQF,EAAOZ,SAVvB,EAanBe,aAbmB,uCAaJ,WAAOC,GAAP,iBAAAC,EAAA,yDACXD,EAAEE,iBACG,EAAKC,MAAMC,aAAaC,QAAW,EAAKF,MAAMG,aAAaD,OAFrD,gBAGPE,QAAQC,IAAI,gGAHL,0BAID,EAAKL,MAAMG,eAAiB,EAAKH,MAAMM,qBAJtC,gBAKPF,QAAQC,IAAI,4GALL,8BAODJ,EAAe,EAAKD,MAAMC,aAC1BE,EAAe,EAAKH,MAAMG,aARzB,UASDI,YAAQC,IAAOC,IAAO,4BACxB,GAAI,OAAQ,OAAQC,KAAKC,UAAU,CAACV,eAAcE,kBAV/C,4CAbI,sDAEf,EAAKH,MAAO,CACRC,aAAc,GACdE,aAAc,GACdG,qBAAsB,IALX,E,qDA4Bf,OACQ,yBAAKhC,UAAW,iBACZ,yBAAKA,UAAW,yBAAhB,mFACA,0BAAMsC,SAAUC,KAAKjB,cACjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIN,KAAO,WACPb,OAAQ,qJACRkB,KAAO,eACPmB,SAAYD,KAAKrB,mBAIzB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAgBF,KAAO,WACPb,OAAQ,sEACRkB,KAAO,eACPmB,SAAYD,KAAKrB,kBAEjC,kBAAC,IAAD,CAAgBF,KAAO,WACPb,OAAQ,yIACRkB,KAAO,uBACPmB,SAAYD,KAAKrB,mBAIrC,kBAAC,IAAD,KACI,4BAAQlB,UAAW,iCAAnB,iJ,GAxDca,IAAM4B","file":"static/js/15.f15cad67.chunk.js","sourcesContent":["import React from \"react\";\n\n\nexport function Line({children}) {\n    return (\n        <div className={\"default_container default_line\"}>\n            {children}\n        </div>\n    )\n}\n\nexport function Column({children}) {\n    return (\n        <div className={\"default_container default_column\"}>\n            {children}\n        </div>\n    )\n}\n\nexport function SmallTextField({header,...props}) {\n    return (\n        <div className={\"default_field\"}>\n            <p className={\"default_field__label\"}>{header}</p>\n            <input className={\"default_field__input\"} {...props}/>\n        </div>\n    )\n}\n\nexport function SelectField({header, options=[], value = \"\", ...props}){\n    return (\n        <div className={\"default_field\"}>\n            <p className={\"default_field__label\"}>{header}</p>\n            <select className={\"default_field__input\"} value = {value} {...props}>\n                {options.map(option=><option key = {option} >{option}</option>)}\n            </select>\n        </div>\n    )\n}\n\nexport function LargeTextField({header, ...props}) {\n    return (\n        <div className={\"default_field\"}>\n            <p className={\"default_field__label\"}>{header}</p>\n            <textarea className={\"default_field__input\"} {...props}/>\n        </div>\n    )\n}\n\nexport const SmallFileField = React.forwardRef(({header, ...props}, ref)=>(\n    <div className={\"default_field\"}>\n        <p className={\"default_field__label\"}>{header}</p>\n        <input className=\"default_field__input\" type={\"file\"} {...props} ref = {ref}/>\n    </div>\n));","import React from \"react\";\nimport {SmallTextField, Line} from \"../SettingsLayout\";\nimport Fetcher from \"../../../functools/Fetcher\";\nimport {HTTP, ADDR} from \"../../../address\";\n\nexport default class PasswordPage extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state ={\n            old_password: \"\",\n            new_password: \"\",\n            confirm_new_password: \"\",\n        };\n    }\n\n    onChangeHandler = ({target})=>{\n        this.setState({[target.name] : target.value} )\n    };\n\n    onFormSubmit = async (e) =>{\n        e.preventDefault();\n        if (!this.state.old_password.length || !this.state.new_password.length){\n            console.log(\"Поля не заполнены\")\n        }else if (this.state.new_password !== this.state.confirm_new_password){\n            console.log(\"Пароли не совпадают\");\n        }else{\n            const old_password = this.state.old_password;\n            const new_password = this.state.new_password;\n            await Fetcher(HTTP + ADDR + \"/settings/update_password\",\n                {}, \"POST\", \"text\", JSON.stringify({old_password, new_password}))\n        }\n    };\n\n    render() {\n        return (\n                <div className={\"default_block\"}>\n                    <div className={\"default_block__header\"}>Сменить пароль</div>\n                    <form onSubmit={this.onFormSubmit}>\n                        <Line>\n                            <SmallTextField\n                                type = \"password\"\n                                header={\"Подтвердить текущий пароль\"}\n                                name = \"old_password\"\n                                onChange = {this.onChangeHandler}\n                            />\n                        </Line>\n\n                        <Line>\n                            <SmallTextField type = \"password\"\n                                            header={\"Новый пароль\"}\n                                            name = \"new_password\"\n                                            onChange = {this.onChangeHandler}\n                            />\n                            <SmallTextField type = \"password\"\n                                            header={\"Подтвердить новый пароль\"}\n                                            name = \"confirm_new_password\"\n                                            onChange = {this.onChangeHandler}\n                            />\n                        </Line>\n\n                        <Line>\n                            <button className={\"default_button confirm_button\"}>Подтвердить смену пароля</button>\n                        </Line>\n                    </form>\n                </div>\n        )\n    }\n}"],"sourceRoot":""}