{"version":3,"sources":["components/video/VideoPage.js"],"names":["VideoPage","state","UserVideos","AllVideos","offset","searchInputValue","isFetching","popupOpen","Done","error","pageId","props","match","params","id","isPageMine","getCookie","fetchLimit","addVideoRef","createRef","handleError","bind","handleClose","fetchVideo","a","val","address","HTTP","ADDR","userId","withValue","limit","setState","Fetcher","response","fetchInitialVideos","handleScrollThrottled","Throttle","Math","abs","window","scrollY","innerHeight","document","documentElement","scrollHeight","fetchInitialVideosDebounced","Debounce","onPopupClose","onFileDownloaded","current","files","length","postVideo","title","data","FormData","append","video_id","adder_id","myId","name","addToPlaylistHandler","videoId","deleteVideo","filter","video","onInputChange","event","target","value","this","addEventListener","removeEventListener","className","style","color","placeholder","onChange","type","accept","ref","htmlFor","map","about","Video","key","deleteMusicHandler","Boolean","AddVideoPopup","onClose","_onSend","text","React","Component","useState","buttonActive","updateButtonActive","hover","updateHover","onFocus","onBlur","tabIndex","onMouseEnter","onMouseLeave","src","PathFromIdGenerator","preload","controls","onClick","e","stopPropagation","disabled","to","_updateTitle","withRouter"],"mappings":"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","file":"static/js/6.d55eb1a6.chunk.js","sourcesContent":["import React, {createRef, useState} from \"react\";\nimport \"./video_page.scss\"\nimport \"../../scss/page.scss\";\nimport \"../../scss/video_audio.scss\";\nimport \"../../scss/hidden_input.scss\"\nimport {withRouter, NavLink as Link} from \"react-router-dom\"\nimport Fetcher from \"../../functools/Fetcher\";\nimport Debounce from \"../../functools/Debounce\";\nimport Throttle from \"../../functools/Trottle\";\nimport getCookie from \"../../functools/getCookie\";\nimport PathFromIdGenerator from \"../../functools/PathFromIdGenerator\";\nimport {HTTP, ADDR} from \"../../address\";\nimport InfoPopup, {handleError, handleClose} from \"../infoPopup/infoPopup\";\nclass VideoPage extends React.Component{\n    state = { UserVideos: [], AllVideos : [], offset: 0, searchInputValue: \"\", isFetching: false, popupOpen: false, Done: false, error: null}\n    pageId = + this.props.match.params.id;\n    isPageMine = +getCookie(\"userId\") === this.pageId;\n    fetchLimit = 16;\n    addVideoRef = createRef()\n    handleError = handleError.bind(this);\n    handleClose = handleClose.bind(this);\n    fetchVideo = async () => {\n        const offset = this.state.offset;\n        const val = this.state.searchInputValue;\n        const address = HTTP + ADDR + `/video/${val === \"\"? \"get_user_video\" : \"get_combined_video\" }`;\n        const params = {userId: this.pageId, offset: offset, withValue: val, limit: this.fetchLimit}\n        this.setState({isFetching: true});\n        const [error, response] = await Fetcher(\n            address,\n            params\n        )\n        if (error === null){\n            this.setState(state => ({\n                offset: offset + this.fetchLimit,\n                UserVideos: [...state.UserVideos, ...response.UserVideos],\n                AllVideos: [...state.AllVideos, ...response.AllVideos],\n                Done: response.Done\n            }));\n        }else {\n            this.handleError(\"невозможно получить видео с сервера\");\n        }\n        this.setState({isFetching: false});\n    }\n\n    fetchInitialVideos = ()=>{\n        this.setState(\n            {offset: 0, Done: false, UserVideos: [], AllVideos : []},\n            () => this.fetchVideo()\n        );\n    }\n\n    componentDidMount(){\n        this.fetchInitialVideos();\n        window.addEventListener('scroll', this.handleScrollThrottled, true);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScrollThrottled);\n    }\n\n    handleScrollThrottled = Throttle(() => {\n        if ((Math.abs(window.scrollY + window.innerHeight - document.documentElement.scrollHeight) < 10)\n            &&\n            !this.state.Done\n            &&\n            !this.state.popupOpen\n            &&\n            !this.state.isFetching\n        ){\n            this.fetchVideo();\n        }\n    }, 1000);\n\n    \n    fetchInitialVideosDebounced = Debounce(()=>{\n        this.setState(\n            {UserVideos: [], AllVideos : [], offset: 0},\n            () => this.fetchInitialVideos()\n        );\n    }, 500);\n\n    \n    onPopupClose = ()=>{\n        this.setState({popupOpen: false});\n    }\n\n    onFileDownloaded = ()=>{\n        if (this.addVideoRef.current.files.length) {\n            this.setState({popupOpen: true});\n        }\n    }\n\n    postVideo = async (title)=>{\n        this.onPopupClose();\n        const data = new FormData();\n        data.append(\"video\", this.addVideoRef.current.files[0])\n        const [error, response] = await Fetcher(\n            HTTP + ADDR + '/video/post_video',\n            {title},\n            'POST',\n            \"text\",\n            data);\n\n        if (error === null){\n            this.setState(state => (\n                {UserVideos:\n                    [\n                        {\n                            video_id: +response,\n                            adder_id: this.myId,\n                            name: title\n                        },\n                        ...state.UserVideos\n                    ],\n                    offset: state.offset + 1\n            }))\n        }else{\n            this.handleError(\"невозможно отправить видео на сервер\");\n        }\n    }\n\n    addToPlaylistHandler = async (videoId) => {\n        const [error] = await Fetcher(\n            HTTP + ADDR + \"/video/add_to_playlist\",\n            {videoId},\n            \"POST\",\n            \"text\"\n        )\n        if (error !== null){\n            this.handleError(\"невозможно добавить видео в плейлист\");\n        }\n    }\n\n    deleteVideo = async(videoId) =>{\n        const [error] = await Fetcher(\n            HTTP + ADDR + \"/video/remove_video\",\n            {videoId},\n            \"GET\",\n            \"text\"\n        )\n        if (error === null){\n            this.setState(state => ({\n                    offset: this.offset - 1,\n                    UserVideos: state.UserVideos.filter((video)=>video.video_id !== videoId)}\n            ));\n        }else {\n            this.handleError(\"невозможно удалить видео из плейлиста\");\n        }\n    }\n\n\n    onInputChange = (event)=> {\n        this.setState({searchInputValue: event.target.value});\n        this.fetchInitialVideosDebounced()\n    }\n\n    render() {\n        return (\n            <div className={\"page__container\"}>\n                <div className={\"page__header background_pic__city background_pic__city_blue\"}>\n                    <h1 style={{color: \"white\"}}>Видео</h1>\n                    <p style={{color:  \"white\"}}>Здесь вы можете посмотреть видео</p>\n                    <div className={\"video_foreground_pic default_img\"}/>\n                </div>\n                <div className={\"VA_func_block\"}>\n                    <input className={\"default_search_input\"}\n                           placeholder={\"Поиск видео\"}\n                           onChange={this.onInputChange}\n\n                    />\n                    <input\n                        type={\"file\"}\n                        className={\"hidden_input\"}\n                        id = {\"select_video_file__input\"}\n                        accept={\"video/*\"}\n                        onChange={this.onFileDownloaded}\n                        ref = {this.addVideoRef}\n                    />\n                    <label htmlFor=\"select_video_file__input\">+</label>\n                </div>\n                <div className={\"videos__container\"}>\n                    {\n                        this.state.UserVideos.map((about )=> (\n                            <Video key = {about.video_id}\n                                   about = {about}\n                                   isPageMine = {this.isPageMine}\n                                   videoId = {about.video_id}\n                                   deleteMusicHandler = {this.deleteVideo}\n                            />\n                        ))\n                    }\n                </div>\n                {Boolean(this.state.AllVideos.length) && <span>Все видео</span>}\n                <div className={\"videos__container\"}>\n                    {\n                        this.state.AllVideos.map((about )=> (\n                            <Video key = {about.video_id}\n                                   about = {about}\n                                   videoId = {about.video_id}\n                                   addToPlaylistHandler = {this.addToPlaylistHandler}\n                            />\n                        ))\n                    }\n                </div>\n                {this.state.isFetching && <span>Загрузка...</span>}\n                {this.state.popupOpen && <AddVideoPopup onClose={this.onPopupClose} _onSend={this.postVideo}/>}\n                {this.state.error && <InfoPopup text = {this.state.error} handleClose = {this.handleClose}/>}\n            </div>\n        )\n    }\n}\n\nfunction Video({about, isPageMine, videoId, addToPlaylistHandler, deleteMusicHandler}) {\n    const [buttonActive, updateButtonActive] = useState(true);\n    const [hover, updateHover] = useState(false);\n\n    const onFocus = ()=>{\n        updateHover(true);\n    }\n\n    const onAdd = (e)=>{\n        e.stopPropagation();\n        addToPlaylistHandler(videoId);\n        updateButtonActive(false);\n    }\n\n    const onDelete = (e) =>{\n        e.stopPropagation();\n        deleteMusicHandler(videoId);\n    }\n\n    const onBlur = ()=>{\n        updateHover(false);\n    }\n\n    return (\n        <div className={\"video__container\"}>\n            <div className={\"video__header\"}>\n                <span className={\"video_name\"}>{about.name}</span>\n            </div>\n            <video\n                tabIndex={0}\n                onFocus={onFocus}\n                onBlur={onBlur}\n                onMouseEnter={onFocus}\n                onMouseLeave={onBlur}\n                className={\"video\"}\n                src={HTTP + ADDR + `/video_storage${PathFromIdGenerator(about.video_id)}/video.mp4`}\n                preload={\"metadata\"}\n                controls = {hover}\n            />\n            <span className={\"video_functional\"}>\n                {\n                    isPageMine ?\n                        <button onClick={onDelete}>-</button>\n                        :\n                        <button\n                            disabled={!buttonActive}\n                            onClick={onAdd}\n                        >{buttonActive ? '+' : '✓'}\n                        </button>\n                }\n                <Link to = {`/профиль/${about.adder_id}`}>Страница автора ⇢</Link>\n            </span>\n        </div>\n    )\n}\n\nfunction AddVideoPopup({onClose, _onSend}) {\n    const [title, _updateTitle] = useState(\"\");\n\n    const onSend = () =>{\n        _onSend(title);\n    }\n\n    const updateTitle = ({target})=>{\n        _updateTitle(target.value);\n    }\n    return (\n        <div className=\"b-popup\">\n            <div className=\"b-popup-content\">\n                <button className={\"popup_button__close\"} onClick={onClose}>×</button>\n                <input placeholder={\"Название\"} value={title} onChange={updateTitle}/>\n                <button className={\"popup_button__action\"} onClick={onSend}>Загрузить</button>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(VideoPage);"],"sourceRoot":""}